<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='GDP_byCounty_11_18' inline='true' name='federated.11pc0410669dnq11o1zaf0vdmenf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP_byCounty_11_18' name='textscan.0oyqrs31hsowjz12c4wuj0dt36qk'>
            <connection class='textscan' directory='/Users/pariya/Desktop/pariya_misc/Resources' filename='GDP_byCounty_11_18.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0oyqrs31hsowjz12c4wuj0dt36qk' name='GDP_byCounty_11_18.csv' table='[GDP_byCounty_11_18#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='GeoFips' ordinal='1' />
            <column datatype='string' name='County Name' ordinal='2' />
            <column datatype='integer' name='2011' ordinal='3' />
            <column datatype='integer' name='2012' ordinal='4' />
            <column datatype='integer' name='2013' ordinal='5' />
            <column datatype='integer' name='2014' ordinal='6' />
            <column datatype='integer' name='2015' ordinal='7' />
            <column datatype='integer' name='2016' ordinal='8' />
            <column datatype='integer' name='2017' ordinal='9' />
            <column datatype='integer' name='2018' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0oyqrs31hsowjz12c4wuj0dt36qk' name='GDP_byCounty_11_18.csv' table='[GDP_byCounty_11_18#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='GeoFips' ordinal='1' />
            <column datatype='string' name='County Name' ordinal='2' />
            <column datatype='integer' name='2011' ordinal='3' />
            <column datatype='integer' name='2012' ordinal='4' />
            <column datatype='integer' name='2013' ordinal='5' />
            <column datatype='integer' name='2014' ordinal='6' />
            <column datatype='integer' name='2015' ordinal='7' />
            <column datatype='integer' name='2016' ordinal='8' />
            <column datatype='integer' name='2017' ordinal='9' />
            <column datatype='integer' name='2018' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GeoFips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GeoFips]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>GeoFips</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County Name]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>County Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2018]</local-name>
            <parent-name>[GDP_byCounty_11_18.csv]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[County Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Geo Fips' datatype='integer' name='[GeoFips]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='GDP_byCounty_11_18.csv' datatype='table' name='[__tableau_internal_object_id__].[GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='GDP_byCounty_11_18.csv' id='GDP_byCounty_11_18.csv_6C0B5C8D26E74248BE06091EF299354F'>
            <properties context=''>
              <relation connection='textscan.0oyqrs31hsowjz12c4wuj0dt36qk' name='GDP_byCounty_11_18.csv' table='[GDP_byCounty_11_18#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='GeoFips' ordinal='1' />
                  <column datatype='string' name='County Name' ordinal='2' />
                  <column datatype='integer' name='2011' ordinal='3' />
                  <column datatype='integer' name='2012' ordinal='4' />
                  <column datatype='integer' name='2013' ordinal='5' />
                  <column datatype='integer' name='2014' ordinal='6' />
                  <column datatype='integer' name='2015' ordinal='7' />
                  <column datatype='integer' name='2016' ordinal='8' />
                  <column datatype='integer' name='2017' ordinal='9' />
                  <column datatype='integer' name='2018' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='GDP_byState_11_19' inline='true' name='federated.1dwjq0n1lkv74718oxhtz1twhuqj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='GDP_byState_11_19' name='textscan.1c0qnj50np2jai12r4qzq14qh4zf'>
            <connection class='textscan' directory='/Users/pariya/Desktop/pariya_misc/Resources' filename='GDP_byState_11_19.csv' password='' server='' />
          </named-connection>
          <named-connection caption='GDP_byCounty_11_18' name='textscan.03ghxvz1uoteii1dvk3dv0px34eu'>
            <connection class='textscan' directory='/Users/pariya/Desktop/pariya_misc/Resources' filename='GDP_byCounty_11_18.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1c0qnj50np2jai12r4qzq14qh4zf' name='GDP_byState_11_19.csv' table='[GDP_byState_11_19#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='GeoFips' ordinal='0' />
            <column datatype='string' name='States' ordinal='1' />
            <column datatype='real' name='2011' ordinal='2' />
            <column datatype='real' name='2012' ordinal='3' />
            <column datatype='real' name='2013' ordinal='4' />
            <column datatype='real' name='2014' ordinal='5' />
            <column datatype='real' name='2015' ordinal='6' />
            <column datatype='real' name='2016' ordinal='7' />
            <column datatype='real' name='2017' ordinal='8' />
            <column datatype='real' name='2018' ordinal='9' />
            <column datatype='real' name='2019' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1c0qnj50np2jai12r4qzq14qh4zf' name='GDP_byState_11_19.csv' table='[GDP_byState_11_19#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='GeoFips' ordinal='0' />
            <column datatype='string' name='States' ordinal='1' />
            <column datatype='real' name='2011' ordinal='2' />
            <column datatype='real' name='2012' ordinal='3' />
            <column datatype='real' name='2013' ordinal='4' />
            <column datatype='real' name='2014' ordinal='5' />
            <column datatype='real' name='2015' ordinal='6' />
            <column datatype='real' name='2016' ordinal='7' />
            <column datatype='real' name='2017' ordinal='8' />
            <column datatype='real' name='2018' ordinal='9' />
            <column datatype='real' name='2019' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GeoFips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GeoFips]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>GeoFips</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>States</remote-name>
            <remote-type>129</remote-type>
            <local-name>[States]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>States</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2011]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>2011</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2012]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>2012</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2013]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>2013</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2014]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>2014</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2015]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>2015</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2016]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>2016</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2017]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>2017</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2018]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[2019]</local-name>
            <parent-name>[GDP_byState_11_19.csv]</parent-name>
            <remote-alias>2019</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Geo Fips' datatype='integer' name='[GeoFips]' role='measure' type='quantitative' />
      <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='GDP_byState_11_19.csv' datatype='table' name='[__tableau_internal_object_id__].[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='States, County Name'>
          <field>[States]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/pariya/Desktop/pariya_misc/GDP_byState_11_19.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/27/2020 11:04:19 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='GDP_byState_11_19' increment-value='%null%' refresh-type='create' rows-inserted='51' timestamp-start='2020-08-27 23:04:19.453' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>GeoFips</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GeoFips]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GeoFips</remote-alias>
              <ordinal>0</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>States</remote-name>
              <remote-type>129</remote-type>
              <local-name>[States]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>States</remote-alias>
              <ordinal>1</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2011</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2011]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2011</remote-alias>
              <ordinal>2</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2012</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2012]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2012</remote-alias>
              <ordinal>3</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2013</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2013]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2013</remote-alias>
              <ordinal>4</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2014</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2014]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2014</remote-alias>
              <ordinal>5</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2015</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2015]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2015</remote-alias>
              <ordinal>6</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2016</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2016]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2016</remote-alias>
              <ordinal>7</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2017</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2017</remote-alias>
              <ordinal>8</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2018</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2018]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2018</remote-alias>
              <ordinal>9</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2019</remote-name>
              <remote-type>5</remote-type>
              <local-name>[2019]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2019</remote-alias>
              <ordinal>10</ordinal>
              <family>GDP_byState_11_19.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='GDP_byState_11_19.csv' id='GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864'>
            <properties context=''>
              <relation connection='textscan.1c0qnj50np2jai12r4qzq14qh4zf' name='GDP_byState_11_19.csv' table='[GDP_byState_11_19#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='GeoFips' ordinal='0' />
                  <column datatype='string' name='States' ordinal='1' />
                  <column datatype='real' name='2011' ordinal='2' />
                  <column datatype='real' name='2012' ordinal='3' />
                  <column datatype='real' name='2013' ordinal='4' />
                  <column datatype='real' name='2014' ordinal='5' />
                  <column datatype='real' name='2015' ordinal='6' />
                  <column datatype='real' name='2016' ordinal='7' />
                  <column datatype='real' name='2017' ordinal='8' />
                  <column datatype='real' name='2018' ordinal='9' />
                  <column datatype='real' name='2019' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Map GDP by County'>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP_byState_11_19' name='federated.1dwjq0n1lkv74718oxhtz1twhuqj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dwjq0n1lkv74718oxhtz1twhuqj' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Latitude (generated)]</rows>
        <cols>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F4203A83-2CCC-41C5-82BE-DF7885E1EAFD}' />
    </worksheet>
    <worksheet name='Map GDP by St'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>GDP by States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP_byState_11_19' name='federated.1dwjq0n1lkv74718oxhtz1twhuqj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dwjq0n1lkv74718oxhtz1twhuqj'>
            <column datatype='real' name='[2011]' role='measure' type='quantitative' />
            <column datatype='real' name='[2012]' role='measure' type='quantitative' />
            <column datatype='real' name='[2013]' role='measure' type='quantitative' />
            <column datatype='real' name='[2014]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015]' role='measure' type='quantitative' />
            <column datatype='real' name='[2016]' role='measure' type='quantitative' />
            <column datatype='real' name='[2017]' role='measure' type='quantitative' />
            <column datatype='real' name='[2018]' role='measure' type='quantitative' />
            <column datatype='real' name='[2019]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
            <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015]' derivation='Sum' name='[sum:2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2017]' derivation='Sum' name='[sum:2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2018]' derivation='Sum' name='[sum:2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2019]' derivation='Sum' name='[sum:2019:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2013:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2014:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2017:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2019:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Longitude (generated)]' field-type='quantitative' max='33098788.622093976' min='25087031.634446912' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Latitude (generated)]' field-type='quantitative' max='6284236.4498502985' min='990951.51404483314' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' num-steps='20' palette='sunrise_sunset_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' />
              <lod column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[none:States:nk]' />
              <geometry column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d4d4d4' />
                <format attr='mark-transparency' value='167' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Latitude (generated)]</rows>
        <cols>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F17D32C4-C979-4351-AB24-A7E0EABD190C}' />
    </worksheet>
    <worksheet name='TB GDP by St'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>GDP by States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP_byState_11_19' name='federated.1dwjq0n1lkv74718oxhtz1twhuqj' />
          </datasources>
          <datasource-dependencies datasource='federated.1dwjq0n1lkv74718oxhtz1twhuqj'>
            <column datatype='real' name='[2011]' role='measure' type='quantitative' />
            <column datatype='real' name='[2012]' role='measure' type='quantitative' />
            <column datatype='real' name='[2013]' role='measure' type='quantitative' />
            <column datatype='real' name='[2014]' role='measure' type='quantitative' />
            <column datatype='real' name='[2015]' role='measure' type='quantitative' />
            <column datatype='real' name='[2016]' role='measure' type='quantitative' />
            <column datatype='real' name='[2017]' role='measure' type='quantitative' />
            <column datatype='real' name='[2018]' role='measure' type='quantitative' />
            <column datatype='real' name='[2019]' role='measure' type='quantitative' />
            <column datatype='string' name='[States]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[States]' derivation='None' name='[none:States:nk]' pivot='key' type='nominal' />
            <column-instance column='[2011]' derivation='Sum' name='[sum:2011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2012]' derivation='Sum' name='[sum:2012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2013]' derivation='Sum' name='[sum:2013:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2014]' derivation='Sum' name='[sum:2014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2015]' derivation='Sum' name='[sum:2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2016]' derivation='Sum' name='[sum:2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2017]' derivation='Sum' name='[sum:2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2018]' derivation='Sum' name='[sum:2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2019]' derivation='Sum' name='[sum:2019:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2013:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2014:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2017:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[sum:2019:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[none:States:nk]'>
            <groupfilter function='member' level='[none:States:nk]' member='&quot;California&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]</column>
            <column>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[none:States:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' scope='rows' value='Value (million)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='0' />
            <format attr='line-visibility' id='refline0' value='off' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' />
              <lod column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' enable-instant-analytics='true' formula='total' id='refline0' label-type='automatic' scope='per-pane' value-column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' z-order='1' />
            <reference-line axis-column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' enable-instant-analytics='true' formula='total' id='refline1' label-type='automatic' scope='per-pane' value-column='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2413811683654785' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]</rows>
        <cols>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A8C68263-6688-4FA8-BB22-A2A71EC1C26C}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Map GDP by St'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='141'>
            <card mode='checkdropdown' param='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]</field>
            <field>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]</field>
            <field>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[__tableau_internal_object_id__].[cnt:GDP_byState_11_19.csv_B44B4E9B7B304376AB093961705B4864:qk]</field>
            <field>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[none:States:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3C857BE8-2B8C-4552-BA93-411B1485D455}' />
    </window>
    <window class='worksheet' maximized='true' name='TB GDP by St'>
      <cards>
        <edge name='left'>
          <strip size='193'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='36'>
            <card type='columns' />
          </strip>
          <strip size='35'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='161'>
            <card mode='dropdown' param='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[none:States:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[:Measure Names]</field>
            <field>[federated.1dwjq0n1lkv74718oxhtz1twhuqj].[none:States:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8153D375-752F-4F72-A1C1-5761A29FD126}' />
    </window>
    <window class='worksheet' name='Map GDP by County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4FE8E072-9B42-4005-8E2C-1A453DBD0663}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Map GDP by County' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydZ3PjWJK1DzzoZUtlenq3Zzp2//+/2YjdiIme7qmSFy28eT/oPbcuQIBG
      lqTyiagoGRAEQTHz3jQnjYeHh9J1XQiCIAgfC9t1XXS73fe+DkEQBOGNMd/7AgRBEIT3QRyA
      IAjCB0UcgCAIwgdFHIAgCMIHRRyAIAjCB0UcgCAIwgdFHIAgCMIHRRyAIAjCB0UcgCAIwgdF
      HIAgCMIHRRyAIAjCB0UcgCAIwgdFHIAgCMIHxX7vCxAEQXgpyrIEABRFgaIokKYpiqKoHOO6
      LhzHAQAYhvHm17hLiAMQBOEgKMsScRwjTVPkeb5k+EmSJHAcB5ZlwTAM2LatHMJHQxyAIAh7
      T1mWCMMQURRtdHyapkjTFMDjLmAwGMC2P545lByAIAh7TVmWSJJkY+Nfx3VdmObHNIUfz+UJ
      gvBkGGMH3i9+XpalCvM4jgPTNJ9k/G3bhud5AIAoimDbNj7aeFxxAIIgrIWr7DiOUZYlHMeB
      4zhIkkQd47puJYzy0g6iLEuUZYkoitR1hGEIy7KQ5/nW58vzHIvFQn0vDkAQBEEjz3OUZQnT
      NJGmKbIsUz+vr7qTJFFOwHGcF3UATPCGYVjZhfBannrOOmmawjRNmKb5ISqExAEIgrAEjeNi
      sUCWZTBNs7WqRn9MHMeI4xie58H3fQCPOwH+e8610PkYhtFovJ9LlmWYzWYwTROe58HzvGdd
      9z5gLBaLstvtvvd1CIKwQ5Rlifl8riplnoNpmhiNRs92AMDjav85Cd9tcBwHvV7voBPEh/vK
      BEF4EkVRIAgCteJ+DmVZIs9zZFn25FU7V/x5njeGnl4LJpoPGXEAgvDBoXGlgc7zXCVZX+r8
      i8UCaZpufM76NUVRhOl0Wkk6vzaWZcGyrDd7vvdAHIAgfHCyLMN0OsVsNqs0SD0HVuwAjyv4
      PM8xn88bdxU8VncOaZpiOp2qpC8N8Utc2yaYpoler3fQ8X9AksCC8OHhypxJ0OdAI64bf92I
      6ka+LEsURYEkSZCmKTqdDoDHckzTNFXpqe/7qt5/XSL6ufi+X0n+igMQBOGg0EM9XJ2/xDnX
      hXdYIspGLhp+Po7OZzgcqjLMoigwn8/R7XbR7/cxn8+f7QT0CqU69YSv7sgOEXEAgvCB4Eo/
      juMXi6e3GX99BW3bNrrdLkzTVOGgNpIkQafTgWVZyLIMWZZhPp+j3++j1+s9eZdiGAa63S5c
      110KdZmmqZxCEAQAAFZH5nl+sDpBh/mqBEFYgonV2WyGoijeJMRRliVs21bx9DRNEcfxysew
      oUy/tqIoEIYhnlqyzpg+gMbyVsMw4HmeCjvpyd+2ENYh7ArEAQjCByKKoldpomqCRtX3fbWa
      n8/na5+/KArMZrOl41hK+lTphyRJkCRJ4/Nzhc/qJz30Q2dA6Yksy5QUBiWl9xVxAILwQaCG
      Dzt2nxPfrj+WuwkaT8/zVMinbQW9yfnrP9vEgTRRFEXjzsMwDHQ6Hdi2rUpV+VxMUuv5CN63
      LMsQhiE6nQ58399bJyAOQBA+CKZpqvg32cYJtB2rf687hCiKVNz9pXjpKiAmfevJZVYhzWYz
      lbxu6mOIogiu6+5tv4A4AEE4cJjw5ErV9/3KDmBVXLtetln/WdNjDMNAkiRq0Mouk+e5Svrq
      uK6LIAhQFMXKzuN9LxWVRjBBOHBM00Qcx0r6WO+wJavCKptU+TTR6/VU7D9JEpimuRfVNNwV
      rGs6M00T/X5/rx3A7r8bgiA8CX1SFmfk5nkOy7LgOE6jgdvEMehhnjZ6vR4cx1F1/EVRoNPp
      wHGcF9EYek02GTDDyqZ9Df0QcQCCcMDoGv5swPJ9H77vLzmAtuoY0zRVSAdYny/wfV8NVgnD
      UMXWwzDci9XyJg6KfQr7joSABOFAqWvscEcAPEode563soxRb94i6wy453lK0qGp2eytSlBf
      A4a86BQPAdkBCMKBQgNMo62HhFzXVYaaEsss32Tpo+u6qmt4k2QnE8yGYagyyUOB84MPyfgD
      4gAE4SBhuAf4qafPWvbZbKZEzzgHV5+FS50edgxviuu6qnxysVjs9Wq/DiUper2eGiS/S3Bq
      G6U2DMPYyFGJAxCEA4XhH331TmfA3QHlEdI0VfXuURSpncOmZY7cUVBc7hAHqdDA7hKU96DD
      7XQ6qlGN8wwcxwGwHL4rikIcgCAcAgzvUDaZGjxsXuKHnytEXRGUj60b/U0TtuympXHkTF1W
      Hr22hPNrY5omut2uMqS7gL670mUzWOqr4zgOut3uUtK6LEtJAgvCoRDHsTK2TQ1MNOi6to0u
      daD/bBvq4QbDMNDr9TAcDtUOY58pikKtsN+jiklP5vMfG9g22Wmladr4nlqWJTsAQTgU+v2+
      +to0TdWEpRsuhoA4XKUoiqXOYGAz1UvuElbFxOlc9jkfwDDKe5WwMhFPZ93pdJAkCeI4VnkJ
      Ou4msT/HcVob8MQBCMIBUA/Z0FBQO79Jx4dJ4TzP4fv+kiTCuhWvHvdvO26fDT8ZDAbvKvlA
      BVKif10UBWzbhmEYjYn3dVpM4gAEYc9oSu42YVmWWoFblqWkkPXHFUWBIAg2Tm7atg3bttWq
      eNXjmFvYdyewa3o/ejiHCV+u8unQec/5HrX2erzJFQuC8CKUZYkgCJCmqdLab/twW5aF0Wik
      jASbshgC0hvEmmLJTee1LAue5600Kvo510kqCOthP0YbaZqqxj72cRRFoeS/V71P4gAEYc/g
      Ko8hG9bfN6lyMg/AY5uMQV3Lv/47nTRNVZVP07nyPEeSJKpuft/Zhcof13URx3FrwjeOYzXS
      ku/5pjIV4gAEYUdp09/vdrsqvLJYLJAkCYbDYavxTpJEhQ1Wxeo3DdU0rSr5eH3c4q7VzG+L
      4zhqlOV7wiorOoCmv4swDJHn+ZJ0xzr2+x0ShAOFnbx16Wau8Pr9vlrlpWmqasHZhasPL2la
      rfN3lmW1rvybDB/VPesVQ7wGvft439nWmL4mm6i06sJ/m7Ibr04QBAA/Y+fz+Vz9a/rw10XW
      kiRRziJNUwRBoBKwbbr1tm1XQhybGm0ObNfr0afT6UEZ/11DL7WlHIW+E+j3++h2u5Xd3iaI
      AxCEHUMXY6OxrZPnuZIm4O+pB0Md/sVigaIolIJlfbVP2QBguTx0lRHXdxRhGKrRj0/pIt5V
      1iW53xpWXfm+rwTp+F5yQD07v7eR4ZAcgCDsEDTWLOlrMqZ6bTcrfBaLhfrgdzqdpfm1pmli
      OBwiyzIVU+Y/GhL+bhV1+ehDMPZN7NrrsixL5X7iOK4orbLJi+9nEATo9XobTV8TByAIO0Ic
      x6pqJ4oiFEWBfr9fUeokunHiylAPwfDDr3cAG4axdC7q3HAAehtcZeoOgOdrkxrYZxhKY5PV
      ezoDXcdpNpup8J8+n4AhOdu2Ecex+ltad90SAhKEHUGf3UsJhyYBL31lXxQFsiyD7/tKCoIx
      Ye4E2pqx8jzHZDJBEAQVQ9GUFHZdF57nLVUA2bZdSUgfCkx2T6fT976UCvUhPnWFUjriTXMB
      sgMQhHdEN7R6N2ccx2plVz+e0s16KKdplaoPc2GylzFiPY5PFVG9Mazpedt6CCzLQq/XU+Mf
      uTOoS0vsI7Ztv5sIXB3ea34NLIfk+H1doK8NcQCC8MZwhc04fRiG6Pf7ykj3ej0lr9wU/9eT
      fOuStXWhtqIoVBcxhdzCMFySEdaNHofHtKE7gTRNn1SOuKvoFU+74ATY4Uvqi4S2xH4b4gAE
      4Y3Ra/WBn8qdADZavTXlBJqeQ4fGwHVd5WiyLNuoYoSCb6uei6MmD20QzHw+V2GuXXAAzPdQ
      YkMPvem5mU0RByAIbwylfNuas1Z9gPUE7yo4k5erfMbuee4oiiryEG1SEDx2laRwWZYHafy5
      uq43470nhvE4fIdT1zb5W1iFOABBeEPyPFclfHrMnU1VdQPPfEBd9E0vEWUJp54QZHIYeIz7
      DwYD1QcQx/GSSNsqA0dH0mZs2GiWJMnBDIJntzUdwK50BAM/y4DZf/EcxAEIwhtB6WXd0DOh
      y9/r4R2urKMoguu6le1+EAQqnJPnuapWsSwLw+EQjuPAdV1VMjifzyulgnycPrLRsizVZGQY
      hhoSUx8a34RlWWqwzCGUhOo7pueusl8Dlu8+l917ZYJwgLCskM1WjuOoVTPruynmRbllAMpI
      53m+VGq5WCzQ7XYRBIFawTOuzzmwXCEy+Us4qpE7jybpYDqMdTkA/TXWdYvoQBzHUcnhfXAQ
      LKPcJT0gnZfKR4gDEIQ3gsldjmFkfJ51/wBUcphTqLiqzrJMhXAsy1ISwU1zYakPb5qmMvRF
      UWA6naIoiqV8QFsNv+/76ro3wTRNDAaDipMrikKVJrquqyQqdr1KqCgKVR67qgJq3xEHIAhv
      AJuz9BVyHMfKKPIY4GeSmKWahmEgCAIVXx+NRmoHMZ/Pl56rbbiL4ziqS5QhHT4nr0sPCW0b
      +tA1h/h9fVg8Y+sUq9t1sixr1WM6BMQBCMIbUC/RYx6AdfNANRHL7lyKwulD2/k/Z/LmeV4p
      6eT/TATXa8XzPMdisYDv+2p1zqohfWXu+/7KiWPrXmsb3JnoiepdhL0ah4w4AEF4BzivV4/f
      6xRFgdlspuLohMaVYR4mAtnMxbCS3mvgeZ7S+yF0POxBoPSEThRFKMtShZFeEoa3mnYwu4Lu
      rDfR1dlHxAEIwjvieZ6q6Wa3qZ5MrXegMkFcX5ky9GLbNlzXrcz5XbWK1UM+Tbxm/Tud4K4m
      hV3Xhe/7and1iLkAcQCC8E4wZj4YDAD8nKer19LrYRgmgBkaqouyjUajJZXQOI4r328bd3/N
      VS9LGXd1F5AkSaOcxiEhDkAQ3oi2Tl9d2VGf4sWS0DYRtvr39Z/VH8+dAUM/lHFmoraep2CY
      5rVgYlrvV9glWAnUJMp3KIgDEIRXhAaXNfCMqdcrbGjAh8Oh6vJ97lSqpiYmfUXLDuSnaMi8
      FLzGXXIAuiQGBfvEAQiCsDVMxuqlmdPpVNXis4OWDmBTGd82GE/XJ32xmcyyrCXRuV1gV2cJ
      eJ6HXq+3M/fpNRAHIAivCI08yx0Zy0+SpKLlo3ftttGm8AlAJZIXiwUsy1J5hXq9PX+ni7/V
      dxzbyAm/BPp9eE+axPB2yVG+BuIABOEVoWFdFUbg8JdNGo7CMFQOg3CXQZkF3Ygx7KRLQvD3
      eZ6rTmJKHjMvoOcG+DrqUhEvyS44gDq7dj2vgTgAQXhF9HLMdcetWnnTcLOqh01c9ccCqCiC
      1p/bdV1VesnQFJO9QRBUxNzquYFOp/OkxrB10EnyWt4D/R5SPptzEw6Z3VM5EoQDoi7CRvSw
      B43xbDZbWsGTOI4xnU5VhRCNPFf3nU5HHctqIq7+68aNvQZ0DkwKc6QjqT/2tTT/n5v3eGks
      y1qavXuoyA5AEF4J6vQ3NTqZplmpfuFOQdcB8jwPQRAoRUpdAoJQ1193GswvcAXL7mDHcZSg
      nO6ULMtqNewsA62Hkl6Dt849tNE0f+FQEQcgCK9IU3kjB3roIR3gcbfAJjAa9izLEARBpRlJ
      r5pxHAfz+bwStuGqnVU/tm1XqlnomPTnbRJ+ow4Rh6JwngEd0ksZyF2J//M6Dj3xq7M7+y5B
      ODDqK229Iaut+UmvzAmCoBJC0tVCCat6mkIoNGT15G1dhK3N+OqhKV5DmqZqlORL8t4GV39v
      Drnzt444AEF4RfS6e/5Pnfy6Eqa+QteNMh0C0YXbWGbKMlK9l4DPXa+zr8+4TZKkIsegl4Ry
      5a9f12sMdam/3veCA3o+Ch/nlQo7BQ3LLmz9XwvTNDEcDpeMM8cu1ss+24ayAz/LP4HlFTwA
      JanAr7vdrhIxqyt91g0cewjWoQvUhWH4Ku/hS4aWtkFPeB/KXONNkByA8C6wBNH3/UoFy0uw
      qmHqrWG8n7X2nO2r5wH0kI6+sq/H7FfFplkJxHm/hmEopxEEgfo58GhkHcdplIDWr6EJxsiT
      JFFhoU6n06pZtCmdTkclqaMoenMdfpahMhmvz2o+ZGQHILwblAN+aTgkfTKZtBq5t4QaP91u
      tzEer+8O1hl5YDkkREzTVHLRNGI8XncypmkqZ9HGqt1I/RjODXgq3BWxR6HX6ynhurdCj/1v
      8tr3Be7QmEuqvy7ZAQjvQr/ff9GVOQ1RlmVqoDcAzGYztfL1ff9Nmnvq5ZKrXqces6cz1D+o
      dcE2/iwMQzX3d5P72NQRrFcgPQcmrNk89VSnrs/h5RS0t0DvkaAa676iFxGw01sX3OMUOf7d
      GIvFotTbygVh32A55Ww2Wxn+ocQyH+M4zotL/TKEsEkTUdvQlzRNl16L3jjGnzP52yQhkWWZ
      GgJPer2eCrcxNKQ7y00M37oSyU6n86SQHh34YrFQz8Omt9eGMhiGYagE93Mc2XvC95XhP/1v
      i1/z9TqOIzsAYX+hsV0sFmpmbt046UYtz3PMZjP1PT8M3BmwQ5aVNZs4Bl1Xh9/PZjOMRqMl
      LZ06fD7GvFc1WunOov56PM9b2lGtu3bmIDqdTuM8YP15GZphb8IqoihSjWfbOlbeQ1Yt6VPS
      XhM6S9u2K6GofUBf7bPsmCE5/uNOIE1THB8fV/6WxAEIe810Ol2KbW5qMBhyiOO4ssJmHJox
      9aZz6hU5dECe56lzLhYL9Pt9te1mNU49bEMHUD/3pslZXfaZ159lGSzLguu6lXPbtl0xqHzN
      NHiUmnAcB51OB4ZhYLFYqBV9Uxy56b5kWfakWnr9vP1+H0EQvNnQeL5vfI/2haIo1GdAlwfR
      FyaXl5fo9/soigJ3d3c4OzvDv//9b5ycnIgDEPYXVqLUa8jbQhn1OHod3ahPJhNMJhNcXFzA
      8zxlELnK4mqVK2fG5XmOMAzVqtn3fSWyZllWpWqG3+urtm0wTbOy+mf4iPNsHcfBYrFAURSY
      z+eVcEf9tTMURFG2unS0Pr+47b4+B8dxkKZpReTuLbEsSzn+XYfvl96kRyemJ9DjOEan01Hy
      4N+/f8c///lPDIfDx+qwd3sFwofmOVt7vV57GyPRdGy98qYeYqGTyfMcvV5PVRjVm6Oanovx
      bL1zliGrKIpU/N73fbiuq5KpTSWQrNxheacectJX/7wn3JG4rquOp6Ni/b5ekaQ3izFkwA5j
      PXbc6XQqTWN62ap+T7dF1yt6DwNMuYxdHU6jo1f16Mb/jz/+gGVZODs7q2g4Mc+VpikWiwV+
      /fVXtUMTByC8C/P5/EmaMjSScRy/SK34psYmDEO129g0aVpP8tbr+hl3Zr6BA+Dr0g+O48Dz
      PJWgZP8Aj9GdgOu6ytDXwwK6k+DAc2oE6b8HUFnl8zr4XnGlXn+dfI1PFVJjNRTnEbyG8mjT
      c7Jx7r3lKDaB718URbAsS90n7tpc18XDw0Ml7Hh6eqpKgY+OjuA4jvqbEQcgvAtxHCNJEgyH
      w61irhRHe64UQdOKX/+66fx1/ZxVoaa239WrMjgrmBUo/X5fGWXW6TMWz0Q3gKVRhfza8zyE
      YQjLstR9rauOsrwySRJVFZWmaSUP0lbJQxVTy7Iq16O/viRJnuwEmETnLuW1dgPsxNYb8/YB
      3t8sy9QigtVcJycnAIDJZALXdVXOhwY/TdMlRycOQHg30jTFeDzGcDjcaBoW8GjMaOQ2oW7o
      9QSobsTr/+sSB01hjm1pKsnTf8eEMytR9GsEHl83DXcYhpVqFf2cSZKoihC9KqTp+tkwlud5
      JVnMVXE9Z5JlGebzeUUvn2Eu/fUx5KTXm29KlmXqdb60UWanMZ3jupLWXYO7Tzrtq6srzGYz
      fPnypfJaPM/Dw8MDzs7OKjLinU4Hd3d36m8HEAcgvDOMqbMkcd2KzzAMDAYD2LZdKelcRdMq
      v2nl2nTsptU49d+37QKaroUf3DzP1aqaxrssy0rIh8xmM1XKSY1/ACqZzPwFv6/P+wV+hr84
      BlJ/zQwf6QaSzkUPTTEMUX9tSZKohOQ2g9WbkvovYaQ9z9ubMM8qOLuBO+hv375VjDwAFfNn
      STNxXRfHx8eYTCY4Ozt73GW+x4sQBB3Ws5umqZJXbR9UrnS63W5r7brOJsZ61TFtq/aXQH+N
      eZ4jDMPGnQ2NcZPT4gq8fj7gZ8hKXx3WG84YK67fByaRdbg76XQ6FeE51v43vWd6Z+8mxrdp
      ItlzYQPgvht/PYfz8PCgKpbq94jhxCzLlJPXnb++yBIHIOwMcRyrP2gOMlnlCLrd7tpacf3D
      0VQG+talhsCjIWWMW/9gtq12uaJfR/21MLegn7t+DxaLReM9qAuhMcHIn/O6dS2jNvge+b6/
      UUhIT0rr1/5U9qmufxV6Ah9Ao/EnlBwHqn/3s9kMw+FQ/UwcgLAzMCFKw9Xv9xvDQjQ8TODN
      5/PGiiB9NVmvdHltw980WF1vsGL4qmlV/xIr1U3i27rz0b/u9XqNSdy682DysS3Poh8bxzGy
      LMNwOFx5TXru4aXuw0uqer5EPuipsACC95K75SY6nQ7SNF06xrbtyudCHIDwLrDeWl+966tc
      vRpEb0bK81wZ/LacQVvs/bWN/6qkMSWYmeAdDAaqOUuPoT+1fLJ+DW3Gux4XpoFkM9qmZZxx
      HKtwlX5PDeOxgcz3/aUh8pt2B7eFrLaFDncbWQ+G4piQ58/pxFjh9NYzg8vyUSspSRLc3Nzg
      9PR06ffA8vus7xJM08RgMMB4PFaNiOIAhHeBlQj1KpKmY/j7KIown8+VUdEbkshbrO6baHre
      eowf+PnBpFzzS5SzNpWDNh3XFvaiHAV3VJtQP65SWqjNPaConV55swoOy6nLZG+CfrzjOCrk
      tCkMiTGB3ev1VIhMf3+5Q33uDIRtoAMqigKe5zU6U16f67o4OTlRDYj6NVqWVVl0iQMQ3gWW
      PdLAz+fzivyv7/vo9/tq9cZKFpYuPoXnOIamRLBucNi81PYczGlw+/5U/aIm2hLV63YGevnp
      fD5Xu5S256BUsmmajVLNPDcNDGUuwjDcWGKBCqe649iU+ryFp9xT3/dhWRaCIKjszvQqqrIs
      MZ/P32x2MO89u39X3RPHcTAajWBZFo6PjzGdTislvmmaVuZAiAMQ3gV+0Eiv16vMmvV9v/KH
      yhWXPuikzmut/ttW2LoDoHPiNdRLI3WZh3qo5zn16Hpoq61aqa0kFajG3Nlg11S/z7nBbefR
      n599BVyptgnqNcHVu25sN3kcK5Oe40gZvqJzqxt/8lJ5mk1h8pfCb2dnZ63H6p+bpuusd1iL
      AxDehfoqhisXCpe1rUQpi6CvaG3brpRDvhb1D1S93p+GvB5qYWy5SV5h2xBHW35j3df15yVU
      MCVxHCvdIz123lRFVA9f6feH0hnM32yDvtPb1AlsEl7a9Lkdx6nIi9d3FIZh4K1mqOix/3pp
      p34M0YX02Aeiw/ebr00cgLATMBmpd8E24TgOjo+PKz9j4u61pINXGdU8zyu11vyfYaFVeYHX
      vM5VP6fTZFJaD+eUZalEw3Tjzc5fGhiGI4IgaE1+02A9pQyTDU9vCd83dppTU0nPR1Ax9C3i
      /zTiLHpg81/TccDPEatl+VNrqv63axhGJSwnDkDYKZo0zYFmw7kq8brJ6rfpfOt+11SfXq/n
      159v3XVsU1b4UuEt3/crjVF6w1i321XjIuM4VtUuDM0Q0zTVDmGVOmiSJFtPXaORaupGXvWY
      l6IsS1UVpY/S1Kt/3sKRZ1mmdsTj8Rjdbhe9Xm/pOODnPTNNE2maLk2Dq59X1ECFnSdNU1V2
      Vx9gTuNPZcRNqmmYwFx3zCbnaXI0TcZ8Vfx9U+rnXeXkNkGvjinLUoUzWL4J/Fzx152dDlfL
      zG/wZ+wuZmJ8W+hsqGy6jpee4MXkte/7Ki/F3c9bxP6ZZGbVD+P27CGpH2tZFkajERzHUXpN
      TfeNj+31empWtjgAYSehEWhaPTIuyg7TTYxM2wd3m1X7ulh7vSu2bqjrv2vaVWz6Op5i/DlT
      QM+/6EaB52WlyKYrbw5Tp9EpigK9Xk9VrDzFaHLF3VTq2/SaXoP6ruct4JAXXRMKaH+/TdPE
      cDhUeTHmXlbB3dVsNhMHIOwubVttOoC6Jv2qKphVRqiptHPV9TTFVXUjvy4W33aeemt/W2z9
      Kcaf072akqX1ap80TZcMX1EUleEihAnb4XBYWX3GcVwJV2yLvgBYlQvwPG9rxdFdpSxLZfx1
      2v4mDcNY6tpe9behHxPHMfr9vjgAYb/gCrW+yln1AdDDHasewyQfjfOqhJt+jvrPNg0j1b/n
      qrm++iOb6O600ev1NqqUYeiFUBQuiiLV+cvXTKfC5CMruRj+4bFPpb4LaDrXPmn5r0I3/vWw
      W1OpL/Bz91V3yOueZzqdwnXdR+f5Oi9HEF4HbnN1msIuTV+3raLqsW7gZ+23/k+/hnUOQo9/
      N11T3bhzfm+3213Kd9TPv+0OgB/2TQyl/rqBn0JqfF6WtPJ/XUyO95JjLp9rmJlPaGt8Mgxj
      L+b3bgIXNk0/531d1XzX9n0dJvdPTk4ed2/Pu2xBeFu4Kmwy6E1//G2KiXXDzlAGUNVRoTSB
      7mCajLj+M5Z/8msd/Xf8Z9s2fN9Xzo0dt23oz7EJz4mR6wa2yflw4Mw217MNrEzS76/ucA7F
      Aeg0vb+e5zWGhrY5ZxzHGI/HODs7w2g0wmg0khCQsH9wJKFehlmnzUHoHyrKDlDkS3+cLprW
      dp62pHCddSGiLMuUOug2te+blJBuqsGzjlWPD8NQxfxfqiFLx3EcDAYDlGWpFDGB5Q7dfUfP
      +dT/RqIoWlJSZS/Gqs5f/dzj8RhHR0fqs+O6rjgAYX9g8pe6OqtK3Zrg/AAmXLm17vf7lWYy
      /q4oCnz//h2u61bG69UTzs9JzgLN84e3YdUHf9sa/DaaqmH02HRT0xd//txrMIyf85E55zaO
      45Whsn1j3QKirbhgPp+r+8OcAHNk/JxwwTQcDlWVEPNMh3MHhQ8BQzK9Xk/Vm1UqN1IAACAA
      SURBVNc1appW7Iyx80PCmmqGfhi71rfe3B38+PEDs9kM3W4XDw8PKMtSdSO/VNhDzxdsu7Xn
      /09NEG8CE711jaNVuyAmHPv9/rOF0/TXRd2fQ0kAAz9DkE2LAfbDNDlhKrmORiO1oBkMBipP
      Q8dQD5sFQYAgCMQBCPuDvhIEoMThgiBYWyrY7/dRlqUyRm3JYl1LhcPPAeDPP//EYrFQzTZh
      GC415tQ/aG3hqVVsUn3UZuzroYOXMo5l+VONct1xOlmWqfm1zxVqI22J+V1mk1AdANX4Vn8P
      F4tF6+wLJsr1+8FdUhAEKrRYFAVub29xcnJSebw4AGGvqH+I2L3KFngmyvQPHZ0DZw5vYjj0
      Y4bDIX755Rc8PDyortmrqyu1s2h7PFdbTw3xbJpjWAWTtKyXf+p1MO6+ijAMYdu26g5eLBYw
      DANpmiLP8xcN2eyT8ee/VTLOhrHcdMad6nw+r4TR9Eq1Xq9XSfIz7BbHcUUILssy9Hq95VLS
      xWJRvpWynSC8NE218mmaYjweA3j8kHCuwCq9+02eJ4oipVNfFAWur69xcXHR+hh+0J5SIdMU
      823aYWx6rsFg8GQFS1YnrevKZW6F82h1LR/P8zaeCbDv6BVgzDkNBoO1r70oCkwmEyRJAs/z
      1OzeNE3x8PCgzk263e6S2ipDQsBjfmA+n6tFStPuUnYAwl7TtCPgxCY9hEN1y+c8D0vxODqR
      qpFtZZbPyQ+0PbatMmkdSZI0aslsgmE8Co1lWbYkL1zfpeiy1/qKNY5jpbGzL6v3p8JVOOWY
      GTbkKr7t9ZumqRrp9PwGnSor1QgXBEVRVCqiuNhJkgRBEKidmOu66Pf71ed8hdcvCO+GXiEy
      HA7h+z7CMFSJ3udA3Rl+0I6OjjCZTABUQz6vtcp9aqKXTUZpmirtpKfsSNqMd1tzmr5j0Vem
      HwW+3jRNMZlM1mr0AFC9J1z5R1GkprbV4YB3PTEfx7EamzocDnF2doZut4skSZDnuewAhMOE
      RmixWCBNUwyHQ5UM6/f7L1afzlmzURShLEt4nofb21ucn5+r69Cv6aVZVfK5ijzPMR6PVSxa
      17Tf9Hz6WERey6rXWB9Arw8iOWS4EKgnc7epWkqSRBUdUIaa0tBEX9TwfWEp82w2U/ebFXOs
      YNMRByAcBEVRqMEZw+FQxfr1KomXwDRNFXcNggCj0Qjz+RyXl5c4Pz9vnNbUVnGkH7MKPZSy
      aUVJEzQeWZZhMpkszV1eB53FU404V6v7VMHzFOgA9AHs+jCdTUjTVL1fnM+gj6j0PG9pUZOm
      KS4vL1UnOe/z8fExHMdR4SC9s1ocgLC3MP7J5hbDMB7b22vVJi9tbJhYZpyXdddBEKgP17qd
      wDbNY7rBfe5r0Z+PiqqDwWCtVpC+u2o617rn47kXi8VSR+uhwdeszzPI8xxJkmy8GKkb9tls
      hul0ipOTE7W7bTrP8fFxo1OwLAtHR0dYLBYYj8fo9XoiBSHsL1wNZ1mm5A7Y8fgWsAS0HlNf
      9+Fe1dW57nFN32/bNFY/D0NDHN7OGLSuigo8iojppaDbXL/uwHgefSjNIe0GuBPlyE3XdVUP
      BUM6wPrXzFCOYRjKiXz+/BndbreSZ9L/nuI4xv39vep7YfLYsiycnp5WZmlfXV0BkB2AsKew
      0kSXLn5L6ABY5z+ZTCoVFuta+1edd9VxL9nopTsRqkQCj/XnR0dH6rjZbKZyHk+h3hA3m82w
      WCzg+74qDd13J8B7M5lM8L//+7/49u0bBoOBEvljAp5jNtdhGAbu7+9xdnaG4XCoSmz1RkU2
      2bHslpVuDw8PsG0bnU4HQRDAdV31OamHI8UBCHvJLunAOI6DL1++bDyasol6d6u+am5Ltm67
      C1jnXAj1/Gls9Hj0unNv6qBYI09DdQhwPKnjOLi6usLR0RFs20av11MzeheLxUYCfaPRCEVR
      wLZtVf7JnUC321XzGVgCGsdxRZr79vYW3W4Xs9kMJycnS4Z/MBhgPB6LAxCEp8IOWW7LgeU6
      /W3i/7oD0IXnVj1/3QmwXr+t5HCTXIIuWQ08JjA3KWHcdIegH0epAj0ktK8kSQLTNPHly5dK
      yTBX77yvbbo++qqekhD68KOyLHF3d4fT01P1Pf9nCI/fX19fw7Is/Prrr5XkPX/f7XaxWCzE
      AQjCU9Hrs7mKZednPexRp+4EmlbO9Q+ujt5tqsOYb91gb5Oj4FxaTvt66m5r1XXzWvI8x3Q6
      heM4e+8AmDfR+0G46teVa5Mkge/7S4OI2Lk7mUyWNHtInucq7wU0TwDTezba7mkQBI+d2s99
      0YLwkel0OkqhtNvtVobVrDO2TcfUw0Btu4S2c3MVuqphq/6P5ZlcoRZFURHX2yTE1DToZtXr
      5vUcEroz1p1mvTO6KApMp1P1c+4KoijC7e3tykIG9gPo52u6jjAM4bquej/r95oJYtkBCMIT
      0Vvv+X2n01EJP33br6OvgNf1COi7gPoqvt6YBUDVi9fLUFftNJqekyWuFHZrYpOmt3U9DIfS
      E8DwDeUumPyN47jRmeqrc+ZDWJZLqfEmut0u7u/vK+eqYxiPXcT39/cqlMiGMjqm8Xj8WPH1
      Iq9eED4o9Q9hfVgNP4B1I9pU26+X9DWt/Fd9r5+vrhlTf8ym9fvT6VTpH7U1f607V5PzYEyc
      lSksd9xn2IMCVMMyjuPAcRykaVp5X7k6n81m+PPPP1UBQbfbheM4re8/jTvP1bZo4I603+8r
      B0PZ9DRN4fs+zs/PxQEIwkuja7rrK711oZEm2nYL/Fn9OP3n9RU3Da++a2hyCvpuIQzDpWtq
      uo51Jav64wzDQL/fR6fTwWKx2GoM5q5iGMZS6EYPsXmeV5kvbRiPneT//Oc/MRwOcX5+jr/+
      +qtVp4n9BUEQIMsyXF5e4vT0FK7rNsb5j46OkCSJEobTVUP1vwNxAILwgugNYnWDXzeU9RWc
      bpSbDPKqFfi66qNNwk3raLu++vkYcmC3KuUfWMeuzwygkWpySodCv99f6ldhiO3i4gKXl5d4
      eHiA67pqdV9/r66urtDtdvH582cAj13c379/V01evV5PPYbic0wkt7334gAE4YUxDEOVheqC
      XKtYZVjrx/C4pq/rcOuvG4d1596Gtl0HB5VwZcpuadd1K5ITnCNsGAbCMFRO4xAaw4DlIS/s
      ryjLUu18DMPAp0+fEIYhrq+v1RyF+pQvvbgAeCw++O2337BYLPDjxw9VgFAUBbIsw3A43Ejs
      TwbCCMIrwBruh4cHZFmGHz9+LJVTNsVwN02KrsoB8HuKiJ2enqoEtR4uYHiAoxs3oSkprf+c
      TU563oPhBz1MwhyDLhFtGAZ6vd5ah7VP8B7RME+n08rP68eFYYjxeIx+v18J23CkI49lgUGe
      5zg5Oan0ClxfX+PXX3+tlNbmed4oVS47AEF4Bbj6M00TNzc38H0fp6enFUPdtvKu14fzfG3Q
      GNRLSBlimc1myhm5rqsSk5Zl4dOnT7AsC5PJZKUT0HcnTbkM3dCFYai+18tk9WMpjlY/B0Nn
      h+IA2Aegl9k2oa/sF4tF49zqLMvguq5KFH///h2fPn1CWT42JOpqodQSsm0b4/EYQRDAcRx0
      Oh2cnJyo90McgCC8Ilx968auvopuMqb11TxXfU2sMpiO4+Do6KhSD85Ver/fVxrxlLVuMlBt
      yeY6LEHVE5NtkgdlWaLT6Sw5gzzPD6o/gM2CYRiqkE9bkhd4jN9T1tzzPFVayoEuVPtkWI26
      P5R8TpIEV1dXqhucaq9lWeLk5ATX19eI41g1LooDEIRXgoaPIwH1kkg9Ede08t5GU2jThK9l
      Weh2u0oVMssyfP78GWEY4urqSu0KnlLuybpz6t7TULX1QXAXwtdKITo6kbdSdX1tDMNQu67Z
      bNZYoquX/97f3+P8/BydTgeXl5eYz+eqhv/Tp0/q+NlshqOjIyXax/d8Op3iy5cvahgSz+04
      DsbjMYbDoZoFIUlgQXhlDMNYKaWgf/gJBb6ajuU5N33ueoI5CIJKiIZVOKPRCH/88QdGo1FF
      1XRd2ILXslgslPgZx2Ty/HEcq/g/k726ABwdU1mWyjAdErxP/X5fhdrqDp67xCiKMBgM8OPH
      D5Tl4zD509NTpesfx7HqzeCMX8MwEEWRmrtsWdbSrtB1XRRFoZrIWKggDkAQ3oFVPQFtBrCt
      EqgNll7qz1V/3jRNVfXNly9f8PDwgOFwiH6/jzRNleJk2zVyJ5EkiZItZqiDTUt0CK7rIs/z
      Voe4aQJ8X6k3Cdbff9u20e/3MR6P0e121fcA1ASw79+/wzRNnJycoNPp4Pb2FvP5HKenp5jP
      5/j69as6X/38YRjC8zx8+/YNLPwRByAIr0zTwJi2Ov9NDOCmO4GmXIP+j6tSzjg2TRNfv37F
      /f09BoMBut2uMu769Y7H48qA8TRNK2WfHIIyGo3UY7kyHQwGOyXl/dYwx7Eq7zMYDNTUNL16
      ajQawXEcNdWLU/CAx3t+cXGB6+trnJ2dLamN0mmkaVops/2474QgvAF68pXfA8u1/JsmPusl
      mNuWjNLQ6I1ZeZ4rgTEmZ6MoUjF8Xc7i5uZGSQzo52dJqeM4+PXXX1V9P52M53kVzaSPCEuD
      V73XzBfRSPM+8t5eXFyo2b7Hx8eqqS7LMlVC+69//Qu//vqrUqpN0xRxHGMwGKhkMREHIAiv
      TF0MrKn2fxt0J/DUx+qP00M8rBdn2WBZlipunaapknCoY1mW2k3QYQRBoI7/KEY/z3P1fuuy
      DwAqg931naD+9WAwQBAEShBuPp8jiiLM53MV8+90Ovj27Rt+/PhRybsMh0MMBgNMJhPc3d2p
      94/OIwgCDAaDSleyOABBeGU2Wd1vaiD1Ffyq51rlZFY1n5VlifF4jMFgANM0kSQJxuMxvn37
      BuCn0Jn+mkzTRL/fV3Flnqvb7R58XF+HMs/6Kp+v3zAMTCYTNWfBMAylDzQajdROrCxLXFxc
      KEft+74aI8kYvuM4OD4+Rp7n+Ouvv5CmKSzLwu3trXLCvV4PnU5HVVSxO7vuvMUBCMIrsirZ
      +5xzrhqessnOoCksBKAy1pKdup8/f66UZTaVnVL3R//ZRzH8OovFQoXOGGrh30Cv14Pruqpp
      6/r6Gr1eT80OrstGMEHf6/UQBIE6/3A4hGmaOD8/R7fbxV9//YXZbIYwDNWEtaOjIxWaK4oC
      URQ17tzEAQjCK/PWjU11w9tWPcQqnXqTGiUGhsMher1ea9cvjXzd+H9UaGg5G/iXX35R4TDg
      Z08AQzBnZ2fwfb9xSLyeV2GCfbFYIE1TVSXkeR56vR7+8Y9/4ObmBt+/f8fXr1+xWCxwf38P
      x3HQ7Xbx559/4uzsDLPZrDK+tCgKcQCC8Nq0Vfw89RzbPLZtB6JX8PB7w3jUC2KjWFtXLo9l
      Pb/neXs/zvElsG0bZ2dniKIIP378WPk+eZ6nJB2aHDa1g+hceexisUCSJJjP58jzXEltMCn/
      8PCg8jGWZSHLMnieh6OjI1iWpQbBAI9ifOIABOGVee7qWK8g2vRc9WTjqvPWj6v3DTSFdlzX
      VaEIWf0/wvuW53lFiK1e+us4jsqxtN07NtDpmkC2bWM4HCIMQwRBgCRJYBiG2kE4joOTkxM1
      IJ5hpfPzc0RRVNFa4nWJAxCEV4TJvrbmn3W0reBXOYOmHce687f1DOjPoa/yueoX4/8TDmyf
      TqdL8Xb9PrFSqu3eMfxT3x3wPep2u6q0WK+wYo6BToFfe56nHIB+HnEAgvAGsIKDBpXKndvy
      1MTqpk5g1WP18lHGrcX4V2HIjAa8zjb3S9dKaoJCcfyb4I6CoSFKbvB5255bHIAgvCKMlXe7
      3YoT2ObxwOoV/6qkb9vPVu0eVjkDzvIV478MZa8Zv2/Csqyl6WBNNOVU9LkNTTsErvQ5aEfP
      ITS9X2VZQjI3gvDKcNvOipCnGs96aKepOmfTEBMTjXoTWP3xeqiA9Hq9Ja164RE2XFmWhV6v
      t/R7XQqjKdymvyeUctYT8VzZU/St6fzcmfV6PfU8LCVtQnYAgvAGmKaJTqeD+XwOYLtcwDpj
      u27F37T6pwFa9Zxi5LdnMBig3++rXIBt23BdV638eU+p189YPhVC+e/y8hKfPn2C4ziqUYwl
      pE0hRH7PqW/1ITxMFIdhCABqJrM4AEF4Axg7j6JIbeNfwgk07Sj0BK6+uqxP5Wo61zq2mVPw
      0dCdpmmayPNcdeYyXs9egcVi0VoSzL8Pw/g5+EWf09A2K8EwDLXQaPpdU+5GHIAgvBFs6uFc
      2JeizZCsqv9v+90qJ8AQh7Cesizhui6iKFJTvvI8Vwqrq/pBdMdNp7Epq/JETb8TByAIbwRL
      8obDIYIgWKsMueo8+v9N6qD11b/+2HWhH/1/whr0thGPwk/KslQjIBniMU0Td3d3KjxTv89c
      vQNQWkyWZcHzvI2Sxk9FHIAgvCF0AtTMZ3v/Nh3CTYnauhOoh4aanEHTtTXR6/XQ7XYPZkzj
      a1KWJZIkURVfvN+64a/3ANSdNuf4smggjmOVXH5ppApIEN4YGgFq5N/f3+P29hbT6bS1fLCJ
      VZVAbWV/24rT9Xo9JSsgrKYoCsxmM0yn08YhQJ7nYTabKadtmuaSZLRhGDg7O8P9/b0ShPvj
      jz8wmUxUOKktf8P8wjY7S9kBCMI7wfLQk5MTtdLjtK3hcKgqN4qiwMPDQ+XnTeGfOpvW/rfR
      6XTQ6/Uk5LMBXLlHUaS+Bx5X/nEcK3G2TUJo1Pbh/F7mAagI6vu+SvTq55rNZpU+Adu2URTF
      0vAe/e9CHIAgvCPU1JnNZjg9PcWnT58wnU7x8PBQSRYPBgN0Oh3c3d0hjmOMRqONK4OeYsBZ
      sy4ib5sTx7H6Wq8GGo/H+PLlS6WSZxWs459Op7AsS80HIJR10KessZSU5Hmu5LzPz8/hOA5c
      11XVSRwBKg5AEN4ZfjDLsoTjOPB9X02EAqpVPqenp8oJeJ6nZrw2GRd9tdckS8yfsdSwLgIn
      bA7vI79mR/DV1RV839/Y+BMO42lr4IrjWOUG9EHzOlmWqb4BHi87AEHYMdg5Sv2WVUPTDcPA
      cDjEw8ODSiRTC4ahIT2e7LoufN+vGHrbtlXDEA0CV49pmqoYNg2IsBreP/5jKCbLMpydnanZ
      vNsyGAzUVLU22DHcBKeM1a9VRxyAILwzhmGomO5isVDa70zm1ZOJHAm4WCxwdnYGwzBwfX1d
      cQCWZaHT6VR+1pYTMAxDOR3LspCmKYIgUCtMyQE0w/vJ+wUAt7e3OD4+VnIZz7l3nU4HSZKo
      UZvb4jhOJSzVhDgAQdgBaLSpA9Pv9zGbzSqrO122WZ8sBTxW64zHY5ycnAB4XD02yQlvch1s
      YEqS5FnaRYeOrssPQIVhnmqw66zr2XgJJMMjCDsCFR7jOFYyArqRX1Xx0+/3Ecexij8/Z0wj
      H8tGJmEZ1vszpMZ/i8UC4/H4RQx3URSvnoQXByAIO4Jt2xiNRuh2u4iiCK7rqpX8JhwdHeH6
      +hq3t7db9RPU0YXLJBncDIXcsizDeDzGeDzGdDrFcDgEAFxeXj7rPQCAIAheXXpDQkCCsEMw
      H0DZX9/3MRwOMZlMVmrI8HEcA/icxi3DMNDv9xGGoTSANaDX5M9ms0qjHAe5e56HP/74A2dn
      ZxgOh0/ajfX7fQRBUJn69dLIDkAQdgi9SzgMQxRFUZm/uwo6h16v92zDTeE66QOoUpYloiiq
      hMYo+UzZZ8MwsFgsMBgMEEURbm5unrQb8H0fRVHg+vq6tdLnuci7Kwg7Bss6Pc9TVRye56nm
      r3VyDs8J29TPLSGgKnmeq/ckyzJVhluH3byfPn1Cv9/Hzc0NgiDY6n6aponz83PYto2//vpL
      KYomSYLpdKpyPs9BQkCCsINQJkLXhvd9H6PRCJPJZOVjn2oUWIGkT6bi88oA+J8qn7y/d3d3
      alhLHTZn8X10XRcPDw8IwxDHx8cb7ayKosB4PEaWZfj06RPSNMXV1RXCMMTZ2RkmkwkMw8DR
      0dGTk/7iAARhR9Hr8/m97/tKQVT/Odk0ZLOqJ4AiZWmaqslWjuNUmsc+IlEUVVbxeZ63xuct
      y1LlocCjQzg7O8N8PsfV1RVOTk5aZyszzDQej9Hv93F8fKx2fsPhEDc3N+j1ehgOh4jjGHd3
      d7BtWzkCQg2pVeEjcQCCsEfouvFNNfpFUSBJkpWJwziOVX7BNE2MRiN1br3qhF9nWYb5fI4o
      ipQQGWUkPlKO4Pv375UZvW0GHKhKbxC9Y/vm5gbHx8dL07vKslRKoGdnZ5X3gz0gvu9jNpvh
      6OgIvu/j4uICYRji5uYGnufh6OhIOfGjoyPVG9KEOADhYNlGY39faJMCrouFeZ63NP4PeHQQ
      8/lcxbF1A9R2n2zbxmAwwGw2QxzHKIpCPY7JUIZBDule1/n1118RBEElobvKAbT1UDiOg/Pz
      c9ze3mIymeD09BSO46iELyW4287d7/dxeXmJo6MjdQ2sAAvDEJeXl+h0OqqUeJWTFgcgHCx5
      nh9cyIJKkVmWVVajepcw8CgpwXJQXTo6SZJKaGITnRruOnR1UOYIrq+vEUURjo+P0e12lQTC
      IWLbdqO+ThOrHADP9fnzZ4zHY1xeXsKyLJRliaOjI9VJvGquQ70/gO99t9tFp9NRzWi6qGDj
      dax9JYKwp6wSVdtXOFHs9PS0siIHqjsexu673a6SANZX/0z2XlxcrH1OPSlMh8IEMTuGmSCl
      Dr1+vYcC5To2PZYKq033gD/TK7u4ogfajT+wukOY70mv19soRHd4nxBBOHBoiEajEfI8RxiG
      agatXsZJQ6+Xjv748UNJFvz+++8b7ZC4A9CPoyH89OkTjo+PK6GGQ+0g5j2kw1113/TfrQpF
      mqYJ13UrUs3r7h0dwEs4V3EAgrCHcKVH3Z9er4coihCGYUVFVDdYlIOmRvw2MgP1lSSNDzVw
      mq7v0EiSBH/99ReSJIFpmjg+PoZt240GnsY8y7KVuwbDMJAkCRzHWZoh3ERZlphMJpUpX89B
      HIAg7DncEXS7Xfi+jyRJkOe5CsfkeY7JZIK7uzv4vq/mCFxdXVXOY9u21PyvgGWfg8EAcRzj
      5uYGJycnmE6nygnqcX/qBTUpsnJIC/Co+XN2dqZyC20VRGVZ4uHhAb7vLymO6sdHUYTb21ul
      S9S2AynLUhyAIBwK+hwAHdaI393d4ejoCEVRIAxDDAYDLBYLVXc+n8/heR7+/ve/yyCYBjiG
      EYDKrfz1119qJ1CX39aT5lmWYbFYIAgCBEGgykG5k2ASGEAlv6LnApIkQZZlqi+A16T/A6Bk
      wbvd7sp50eIABOEDQI3/v//970iSBN+/f4frump4yXg8hmmaODk5wXA4fHUFyn0lTVPc3t4i
      TVNVqtnv99Hr9Zbq9QmHxV9fX2MwGKia/TAM1Qo9z3OlF8Qdhm7gec6HhwcA1V1G3cBzQpjj
      OMjzvFIZ1iTzIQ5AED4AbCDyPA//9V//pap2/v3vf+P09FStbLetnNINyqGHjZIkwWw2Q1mW
      GI/H+Pr1q2rq+vz5s0rO6iG0+XyOu7s7nJ2dodfrqVLN2WyG+/t7DAYDjMdj9Ho9+L6P6XSK
      6+trAD9LSU3TRJZlGAwGuLq6gud5GAwGjdcYx/FS6e+qpLI4AEH4QOgrwl6vh99//x3T6VT1
      BmxqxGlUKFtNyePnjkHcZVh+CwD39/eYzWawbRtRFOHy8hJ5nmM4HKqVfRzHmM/n+Pr1q9oh
      8L6dnZ3h5uYGNzc3cF1XjfY8OjpS9y/LsoozYVL58vKyVanV9308PDyokt1VhGEoDkAQPip6
      zuDy8lINN+/1eq2PYVVRmqYIwxD/+te/cHFxgdlspjqEfd+vPIYhC91g7aOTGA6H6Pf7+OOP
      P9Dv91UN//n5OYDH13l5eYlut6vkM05OTuA4DsbjsSrTDYJAJeh//fVX3N3dNT6fXmEEPDqE
      MAzheZ7aGdRX96z0WiwWGA6HlXxCnSzLxAEIwkfHdV18+vRJGfEsy5S6ZD3EwzLEJEkwHo9V
      KCKKIgBQjoHjLfM8V2JkTHpu0n28i7DslpIQs9kMi8UCRVGoFbnnefjx44cSg6Ohn81mOD8/
      h2VZypCfnZ1VdJ3WwR1HnueIoqhSCUTnfX9/j/Pzc0wmE3ieh7u7OyUlzvdosVig0+lgsViI
      AxCEj45hGBiNRvA8D5PJBP/3f/+H33//HcBjgpIOgeEOhos4rUqHchPAY4hBJ0kSVYa6jzsA
      4KdC62AwqAxqmc1m6h4CUKGi2WwG4NExsmeDYnp0HhTja1NoBaAqtxzHUfkCQnG/JEmUQNzD
      wwNub28xGo2QJAnu7u6UNMpwOESSJI/VS693qwRB2Ado1Hq9HvI8RxAEmE6nyPNclTuy+kUv
      LTw5OcFkMsGnT582eh4mnq+vr/Hbb789a3D9LvD582fMZjMkSYI///xThWWSJFEyDHo+gPeN
      kt6U0WhyovXvacw9z8P9/b0SeovjGNPpFP1+HycnJypxzCE0o9Go4mB0RVFAksCCIPx/DONx
      FjBVRCn/zCoUhhmI67qqvr0sS+UsdPQyxrIssVgsEMcx7u/vlYTEPqIP7BmPxzg9PUUYhgiC
      AF+/fl1aved5riqsGLtflzTnqp9aTspo2zaur6/h+z5838fR0dHSrqrb7eKXX37B7e2t6lFo
      ShqLAxAEQWFZlmpK0mvbv379ioeHh8qEMgA4Pz9XswXu7+9VArQuVcByxPF4rLpeJ5MJjo6O
      KtUq+1RFRId5fn6ONE3R7/dxfX29dP2UetDlM5ic9TwPnucp+Q7Crl+OoDw5OVEJ+CiK8O3b
      t4r2UtO1cQjNzc0NLi4uGkt8xQEIgrBE3ajYtq1WovpK0nEc5SjiOFbzalnzrkMDlmUZPM9D
      kiT45z//idFoBNM0EQQBhsNhpRRyl2EV1enpqXrd1Pm/uLhQ9fiO46gQCvTCNQAAGJVJREFU
      kGVZ8DwP//3f/63unWVZiONYSTgDP/MnzCUQ5mN0p8ny0Hrins7C8zx8//694jR4/eIABEHY
      mFWG2fM8WJalqk0AqNARvzYMQ2kSBUGg5A3Y6Uq9fera74sjcF0XJycnWCwWqgTTdV1YllUp
      j+XP+Djiui6GwyGCIADwuBNravaybXtpt8AJYtxRZFmmdIh834dt2/A8D7e3t2pnwBJWY7FY
      lHVhIUEQBB2GeOqziPWBNPz/+voa5+fnME0T9/f3CIJAxcyHwyHm87lKYHLQDB2DXlb6+++/
      791MB0o/1HWBNn2svnoPw1BVEenH3N/fo9PpqNBbHMf49u2bmuFcFMVSPkavzprP55jP57ID
      EARhPRSLo/GvG30dziTm76icyRp4yh8PBgO4rou7uzsVWmJlSxiGOD4+XpI12Ae4G3jqY+lU
      9T4KGnXgcWfQ7/dxdXWF4XBYGfvpum7rc3N3wOPm8/ljXuBJVyoIwoegLEvMZjMEQbCyWYnV
      MFyFTqdTHB8fq/h0URRqNc+h5nQG8/kcp6en8H0fWZah2+3CcRyEYbg3YaCXhK83z3PMZjNM
      JhOMRiPV3MUqom63i/l8rmQ4NkWvzBIHIAhCI2VZqpLNh4eHSly7TpZluLu7w9/+9jecnp7i
      6uoKSZLAMAx8+fKl8ph+v4/pdArTNJdKJnW4+n1KOOUQYCyfoTPXdXF/f4+LiwulHbRu4Ewd
      ylVQAFAcgCAIjXCGsOu6OD4+xmw2w3Q6RZZlOD8/r4Qb0jRVq3jDMPD161cAzWWd7Dze5PmD
      IECv11O7h4/kCEzTxNnZmfqeHcSWZVV0gLa5J2mawrIsDIfDR+XSF79qQRD2Hq7+WV3CKhcO
      I2FnMGFTFKnLIj/1GoIgwN3dHe7u7tRAew5bP2SYTK47UH2ID0NC2zqAKIrw/fv3xyax17h4
      QRAOA93QFkWByWSiJlhxwthrh2moPkqD6HmeWsHWOaQdgud5iKIIeZ4raQ7TNNHtdlX57Onp
      6VYS3kEQwHVdlGWJb9++iQMQBKEZfc4tFUD7/b7SrhmNRkr58/r6+lVlHXRHFMex6hlgOISO
      Yd+qhtpg2WxRFPjrr78QBAH6/T7KskSn01FKrNsmfxeLBYDHWRBxHIsDEAShmclkoiZgpWla
      kS8GoJqbiqLA7e3tkqjZa5JlGbIsq/yMncT7rDaqYxiGkpkeDoequ5ryEE2jI1dhmiZGo5HS
      FZJ5AIIgtMKJVsCjJEE95JKmKcbjMYDH3YBek/6SbGrkWIra6/VU+eg+aQs1YZomfvvtN/zP
      //wPfvz4Acdx0Ol0cHJyoqp/tsmHUNiPWk3iAARBaKTf7yuD0dSRO5lM1IobeJ34O8+5TZx7
      Pp8jCALYtr03ukKrcBwHnufh/PxcJdpns1mjlPQ6uDtSwnQvfrWCIBwE3W5XDTKpDxdnjfpb
      hFu2dQLAz8RxlmV7KzlNDMPAb7/9hpubG5UIB4CHhwclEU39pXW7MMuyMJ/Pfw6wf/3LFwRh
      36CKZVuXKbtTd51DKRflLsB1XTiOoxRBgyBAGIaYTCaYTqe4vLxUshF1yrKE67qqusgwDHEA
      giA0w/r/fr+/VF0zHA6XhMpe4/mfu7vY9/AP0ad48XuOe+R4x4uLC3Q6HSX6VodCclEUKZE+
      CQEJgtCKYRjodDqIoqgyEYwzgieTiWoCYzya+j9JkqDb7b6LEeYOZt/URFfBcBt3NbZt4/j4
      uHJMPVSnQ3G94+Nj1eUtOwBBEFbC1adhGJUpVOwKnkwmmEwmSrtnPB5jMplgPp8vDYZf9Ryr
      vt8WDm4/lB0AADXacRW9Xg9BEKj3Qoc7Kg6nPzo6kh2AIAiroQMIw7CyumRdeVEUuLu7w59/
      /olOp4PBYIBOp4PFYlGRh9j2OZ8Kh6ns+9D5OroDboPTxa6vrxGGoRoKz3kA9R2ROABBENZi
      miY8z1Odv3Xdn/PzczUPmAOmOp0Orq6ukOc5+v1+azjmJY005/QeooIoQ2ursG0bX79+VT0c
      nucpmW59jgObysQBCIKwEb7vq3LDptJQ27YRxzGAn0PJv3z5gjiOcXt7C9/30el04DjOypXs
      cwx3v99/tYa094QyDut2VEmS4O7uDkVRYDQaodvtotfroSxLhGGI8XiMxWKBXq8HQHYAgiBs
      AA06Swjr4waZINZX+QxZ+L6Pi4sLNeLQdV01k7b+HM+9xm3VMfcFSmOv64pmly87fQm1haid
      BDwmhSUJLAjCRtCI1EM5TC7GcazGDtIp6Jr13W5XjYh8LSN9iMYfQGXM5iY03QeG8ZIkUTkC
      cQCCIGwME6z1lbY+y5Y0GSzLslSJ6FMTxG3su+5PGxTjI9xZtf3jMU3vz8PDA8bjsZKVFgcg
      CMLG6B3CR0dHSnStLEvYtq3GQLbB8szpdIrb29s3vPL9hRU88/lcOU7+0wfGA48OljMEgJ/O
      oigKPDw8wLZt/PLLLxiNRlgsFpIDEARhe/RGK9M0MZvN8PDwgF9//bXiAJp2Af1+H0VR4P7+
      vpKQbHqOtnM08dwJZLsKB8JwLkNZlpXXmef543xf21bO4l//+pcy/kdHRwiCAIPBQDXm+b4P
      3/fFAQiC8Dy63S7u7+/hOA6iKFIlhqTJgBuGgeFwiPl83uoA6oZuHbpUwiFh2za+ffuG8Xjc
      qPPD3cB0OsVisVDhOU4OS9MUR0dHjQlycQCCIDwZGpTPnz/DcRz8+PGjUf6BcezJZFKZ6Xt0
      dLTy/Juu/vVu5UODmkyu66oyWx3KcjiOg8+fP6tEPPDoHG5ublTXdh3JAQiC8CJYloWyLBtr
      /BmDPjk5wcXFBS4uLpDnuXpME3qycx0cB3mocEW/yb3QB+HYto2TkxNcXV1VEsnAo3MVByAI
      wrOh4XddV5Us6p2naZpWjLRhGBgMBq2drU1VLKt4y3GU7wWlnJvuxaqdEvsuuPvi8UmSSAhI
      EISXgUY9iiKkaYo0TWHbNvI8RxRFGA6HS48JgkDJRzQJnelOpA3P8w5S+qGJTqejhvHohGGI
      IAiUDIeOruj673//W814WCwWsgMQBOH50EB7nofpdIosy3ByclIJQ7A8kceyY9WyLEyn00ro
      Qq8AajL+tm3DdV10Op3WoTWHBiuv9G5eEkURTk5OWp0oE8XUZEqSRKqABEF4WRzHwWAwgO/7
      cBynkuQ1TRM3Nzfodrtq3rDv+0rnZjweqxm+bSt+z/Pg+z5c1600PX0k2nIdq8pgr6+vcXJy
      okJInufh4eFBdgCCIDwfGuy7uzsAzSWZHGxuGAZubm6wWCxUqefx8bGSm67/Y9XQcDjEaDSC
      7/vK2H0041/fIZGiKFQ+Rd815XmO6+trDIfDSpUUk++yAxAE4dnQ4ERRhC9fvjSGbgzDgGVZ
      6Pf76Ha7mE6nyrC7roswDBHHceMQ9+FwqLqOPzpNcw4Mw8D9/T06nY6aEcw+ADaA6TCPIDsA
      QRCeDY29HptuW6HTEXCMJGPUjuNgOp2q8/GfZVkHW+P/FJpCPfx+sVhgOp3i7OxMyW6wMY8l
      tYZh4O7u7jFJ/x4vQBCEw4GDSqhLo3ertpVyJkmCxWKhyjfZwdoU396k9v0jQSNen8ngui7m
      8zmOj4/hOI6qjKo7Yh5fFIU4AEEQngfjzw8PDxgOh42hH/3/sizhOA7+9re/IUkSNXDedd1K
      RQ/PY1mWrP41uCP6/v27SraXZYmjo6PG8BmhYzYMA58+fXqc3/BWFy0IwuHB1T9r/0ej0dIx
      TbsArmAdx0EYhjg6OlJxat2BHLLEw1NhaW2WZbi7u1MS200jN3kv0zRVx56enqqmPXEAgiA8
      C67idQ2aOk0xayqCUpue5Z/8R/kDcQDLOI6D//zP/8TDwwPyPF8pmVGWJW5ubnBycoKHhwfV
      lT0cDiUJLAjC8yiKAkmSNP6uKRHM7zmjVheHo+E3TROdTgf9fl+MfwMUiKMM9Ko8CUNut7e3
      aqJbr9d7lPN+w2sWBOEAYRioTdmzSRmUj/n69SsMw8DV1VWlXNH3fQwGg4PV+H8JGB5rc776
      caenp2pms+M4qqRWdgCCIDwL0zSV1EAbTTIPQRDA8zx0Oh1cXFwgSRLMZjNVvijGfzXcBWxy
      jygjwWlufIw4AEEQno3neUsCZUD76p9fK0Nkmjg+PlYDYsT4b8am3dB0AKPRqNJIJg5AEIQn
      wyYuz/Mah5U0yTozAVwv76Rq5aarWuFnU92q39u2rUTz6sdKDkAQhCdDSYEsy7Yy2pZl4ezs
      DI7jqCSwYRj4j//4D2n82gLDMNDr9TCfz2FZlprTrP9ebwirIw5AEIQnUZYl4jhWw0WaegCa
      oDGyLKsS7mH1j6z+N4fKno7jPEkdVRyAIAhPoigK1cWbJEljKGLVYHdWAjXNEBY2Z10YaBWy
      1xIEYWto9PM8x3g8buxC5XFtQ10ANCaOhbdDdgCCIDyJMAxRFAXSNFXTv+pQz7+tGYzHyA7g
      fZAdgCAIT4Ire9M0W4e78zj9eKLnAIT3QXYAgiBsDRO2QPvcXh3q+ruuq7pRm2bbCm+LOABB
      ELaGYRt2AK8SguPx3W5X6f9LyGc3EAcgCMLWsAEsTVNVZ74KVqqI4d8txAEIgrA1dAB5nq8c
      QqKHetoqhYT3Q94RQRC2hqMfOdu3Dd/31ahHWf3vHpKBEQRha7jyj+N45Q4giqKtZSKEt0Mc
      gCAIW8OqHtM0K0Pg66yaVCW8P/LOCIKwNbZtq+HklIOoYxgGBoMBHMd5hysUNkEcgCAIW1GW
      JdI0VYZ/Nps1OgDTNCX2v+NIElgQhK2gA8iyTM0AqBt513XR6/Xe4/KELRAHIAjCVlDFEwA6
      nc6SoBsnTz1VoVJ4OyQEJAjCxpRliSAIlNEvy7KxEUwSv/uBvEuCIGyFbdvKwKdpurTST9MU
      s9lsZX+AsBuIAxAEYSv08YI3NzeNsf4gCBpnBAu7hTgAQRC2Qi/7bJNzdl13rUCc8P6IAxAE
      YWP0CV+TyUSpe+rYti1J4D1BHIAgCFuhO4HhcLj0+06nI0ngPUHeJUEQtsJxHOR53jjq0fM8
      +L4vzV97gjgAQRC2wnEcOI6DLMtweXmpfm6aJvr9vqz+9wh5pwRB2BhWAFmWhU+fPqmf8X/T
      NFtX/wwbZVmGJEmkTHQHkE5gQRA2hsafht5xHFxdXcGyLHQ6HQyHw5VOIM9zLBYLmKap5gQI
      74exWCzKbrf73tchCMKeUBQFoijCbDZTeQD+LM9z/OMf/2gNA+kD5PV+AuF9kBCQIAhbwZU/
      lT4Nw4Bt2+j3+42qoPXHckaAGP/3RxyAIAhbQSNOnX/d6FMldJ0jEHYDcQCCIGyNaZrodrtL
      JZ9FUWAymSCO43d1AnqoSWhHHIAgCFujh330HGIURbi9vcXDw4PKCYgh3l0kCSwIwpPhSjuO
      Y4RhiDzPYds20jTF6empSgZLvH83kTJQQRCeDJPAnU4HnuepAfEyDH4/EAcgCMKLQKMvIZ/9
      QRyAIAgvioR79gfZowmCIHxQxAEIgiB8UMQBCIIgfFDEAQiCIHxQxAEIgiB8UMQBCIIgfFDE
      AQiCIHxQxAEIgiB8UMQBCIIgfFDEAQiCIHxQxAEIgiB8UMQBCIIgfFDEAQiC8K7I9K73QxyA
      IAhvDo1+URTIsuy9L+fDInLQgiC8KXmeI01TpGmKTqcD27ZFQvqdEAcgCMKbUJYlsizDYrFA
      WZZwHAeAzA94T8QBCILwquR5jjzPAQBBEMA0TXS7XViW9c5XJogDEATh1WCcfz6fwzAM+L4P
      3/dl1b8jSBJYEIRXJUkSAIDjOGL8dwxxAIIgvAr1Kp88z6Xkc8cQByAIwquQ5zlms5mK/+d5
      rhLAwm4gDkAQhBenLEtEUYSiKCo/T9NUOQTh/ZEksCAIL0aSJIjjGMCjsa9jmiZMU9adu4I4
      AEEQXowsy5Dn+dLKnxiGIQ5gh5B3QhCEF8P3fQyHQzHye4LsAARBeDFo+KXUcz8QNy0IgvBB
      kR2AIAhPRq/rNwxDVv57hjgAQRCeTFEUmM1mMAwD/X5/bexf9H/eF12GuyxLcQCCIDwNGhJW
      /KRpCtu2EQRBa62/SEE8Hd14W5b1pPvIZjxxAIIgbA0NEFf6rPnn15R8XneOj+gEyrJUndD9
      fn/tPdA7pg3DUFLaRVHA8zwVcnNdV/3ecZyl8/I8RVFgsVhUnLM4AEEQtkJ3ALqxyfO84hCa
      iKIIvV7vVa9vFynLEkmSKGG82WwGy7JgWZZqjuMKn/LZ/J6GPk1TZcz1+xxFkfq54zjodDqw
      LAtlWSKOY3WuLMuWZDjEAQiCsBW2/Wg2sixbWu23NYARGrFD3AHQuOqhmqIolEHXO6Ob7t1z
      nxeAmrTG+7tOd0kcgCAIW5GmKeI4bpR6WMehqoEWRYE4jpEkiYqvvyebPr84AEEQNiZNUxRF
      Ad/3Yds2wjDc+hzvbRxfEoZswjB8kkN8b8QBCIKwMa7rAqiOefzI5HmO+Xy+NvS1q4gDEIQD
      oV418lqkaYr5fH5QK/mnwNX/vhp/QByAIOw1RVEgTVNkWaZiz1Tc9H3/1RqvLMt6chJznw0m
      ofGPoui9L+VZiAMQhD2FdeVtsWfDMNDpdJ61G2jaVdi2jcFgoHYC27KvDoCVPUEQNJZU7iPi
      AARhT+EqtI04juE4DkzTVMa77gw2cQ6sJfc8r9KBynNva9CjKILv+1s95j3Ra+/DMDwIw0/E
      AQjCnrIu/lyWJWazWeVndAZsPqob9SZYWx7HMTzPg+/7qhHMtm3V3LQp+9QDoK/493Xnsgpx
      AILwgaAR484hSRI4joNut7sk5FYUBaIoquwy4jhGlmWqDPQpxnxfBOHYSbutg9snxAEIwgvD
      tn/TNJ9sJDfBsiz4vv+sRCSvlefSO0iDIGg0fhQUe8517wOs7z9kxAEIwisQBAEAoNfrwXGc
      xmOe6xgoBJam6bNr8qMoqgiLAc1D3Z8Ln2Mf2MfGrm0RByAIrwAThfP5HL7voyxLZVAoAsZY
      uq4hs+1QFQ5hf4nrDYIAYRjCcZxXk2ywbXsn5wWzwgf4mScRByAIwkboxrIeNqmHaFi7zzBR
      WZawbRtpmqokq06bQzAMA57nIcuyF4tTMyT0WuxiBQ1j/Qz3dDodAHgxsbZdRhyAIDwBXe1R
      X8FnWbZWEpnow1S4ig/DEGEYwjAMlZxdtSNYVwoqbA7fR4bvPgLiAARhQ2j0uXqnzvprPZee
      nOXP6iEilnTuixPYxfr/jzzLWByAIGwAV/ecyPRWRFEEz/NU5Y3neZVpUMB+1dXvYggI2K97
      +JKIAxCEFnSxL067eutmIF4Ddx9hGKrafbJPyUqOJNSbyd6bjxxGEwcgCGg2AlmW7UTr/3w+
      Xxq9uM8GK4oiZFmGbrerpou9Fwy1HXq9fxviAIQPDUM7YRjubNXHIU7RyrIMs9kMnU5HhbTe
      gyRJntXUtu+IAxA+LDT8+xRCOSTYe8DdwHuEhPalK/m12I0gnCC8MWzMEuP//iRJgtlspgbG
      vxVlWcI0zQ/tBMQBCB8Oxvs3rdcXXh+OVnwrnX0uAObz+V7nU56LhICED0eSJAiC4ODi6vsO
      Q0KDweBVcwIcpHPIKp+bIjsA4cMRx7EY/x0lz3MEQfBq5bZlWSKKIjH+/x9xAMKHgRU/hzjY
      45BgZc5Lv08s+dz3Ob4viYSAhIOCJZNc6VFTx7ZttfUXB7D7MD7f6/VeJElbliXCMBTjX0Mc
      gHBQ6GMQmdyjI7Bt+0Mn/PYNCus9d7A9ZTR2tc/jPZEQkHBQUDKhbuh1PX5hf6D8xlOb4dhw
      Jsa/GdkBCO9CnudK0OylKj4Y45cE7+HAsB3DeBxgv+nfzHvoN+0T4gCEd4GxeMuy0Ov1nu0I
      WNsvMd7DI8sytYI3TROdTkeNlUzTVP3OdV2VLzAMQ0l3C+2IAxDeBX2gymKxqEgBbOsImPCN
      okhW/wcO/17oFPRQXxRFcBxHzTWWiq/1iAMQ3p00TTGbzdTqjTNzOeyEM1oJv+aqX/R8Ph5t
      Xdwi77Ed4gCEnUAfj1j/ANPgm6YJ27bhuq4q65zP57LKE4QnIg5A2HkY1qEOfhzHsCwLpmmK
      8ReEZyAOQNhL9n0oiiDsAtIHIAiC8EERByAI/6+9OqhhIAYCGHiVyp9qAETZK4vm4RkE/hmi
      DAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoA
      AKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAg
      ygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKIMACDKAACiDAAgygAAogwAIMoAAKK+
      55xn7327g5iZeWbmdgakfdZa7+0IAP7vB2/wEzMtm4LNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Map GDP by St' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='TB GDP by St' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
